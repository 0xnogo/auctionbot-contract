{
  "address": "0xF02c6b1318045DD9D986185ed11fB653E352aEFc",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "_uniswapV2Router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountTokenMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountETHMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidityETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactETHForTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x07dda9662d3fbcf4e801eb61c5ceddbd5df680c3205f0db290ac1ec36a835c0e",
  "receipt": {
    "to": null,
    "from": "0x9D5a2ddBb543E62e026b182C8929d099781547c3",
    "contractAddress": "0xF02c6b1318045DD9D986185ed11fB653E352aEFc",
    "transactionIndex": 1,
    "gasUsed": "562371",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x8697ac3bfaa612b5aa52f238e029e8675dacccd2b62770cc83500b644f65c195",
    "transactionHash": "0x07dda9662d3fbcf4e801eb61c5ceddbd5df680c3205f0db290ac1ec36a835c0e",
    "logs": [],
    "blockNumber": 54973762,
    "cumulativeGasUsed": "562371",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf01777b293d26d80cbcad04E4D234069C66b5AC3"
  ],
  "numDeployments": 2,
  "solcInputHash": "abe7ae043c42b11fc63ac09b1e999548",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/UniswapV2Wrapper.sol\":\"UniswapV2Wrapper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\ninterface IUniswapV2Router02 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0xb97ee5f4093f254670f5d11e2632a0470c2408f5ccc8ba95b311d92d0fa85f6e\"},\"contracts/interfaces/IUniswapV2Router02Wrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./IUniswapV2Router02.sol\\\";\\n\\ninterface IUniswapV2Router02Wrapper {\\n    function uniswapV2Router() external view returns (IUniswapV2Router02);\\n\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xac96d52f2e2183638658fc77a1dccca26e293c917277426723b5a55d04c3a11d\",\"license\":\"MIT\"},\"contracts/token/UniswapV2Wrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../interfaces/IUniswapV2Router02Wrapper.sol\\\";\\nimport \\\"../interfaces/IUniswapV2Router02.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract UniswapV2Wrapper is IUniswapV2Router02Wrapper {\\n    IUniswapV2Router02 public uniswapV2Router;\\n\\n    constructor(IUniswapV2Router02 _uniswapV2Router) {\\n        uniswapV2Router = _uniswapV2Router;\\n    }\\n\\n    receive() external payable {}\\n\\n    function factory() external view returns (address) {\\n        return uniswapV2Router.factory();\\n    }\\n\\n    function WETH() external view returns (address) {\\n        return uniswapV2Router.WETH();\\n    }\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable {\\n        IERC20(token).approve(address(uniswapV2Router), amountTokenDesired);\\n\\n        // add the liquidity\\n        (uint256 amountToken, uint256 amountETH, ) = uniswapV2Router\\n            .addLiquidityETH{value: msg.value}(\\n            token,\\n            amountTokenDesired,\\n            amountTokenMin,\\n            amountETHMin,\\n            to,\\n            deadline\\n        );\\n\\n        if (msg.value > amountETH) {\\n            (bool success, ) = msg.sender.call{value: msg.value - amountETH}(\\n                \\\"\\\"\\n            );\\n            require(success, \\\"Transfer failed.\\\");\\n        }\\n\\n        if (amountToken > amountTokenDesired) {\\n            IERC20(token).transfer(\\n                msg.sender,\\n                amountToken - amountTokenDesired\\n            );\\n        }\\n    }\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable {\\n        uint256[] memory amounts = uniswapV2Router.swapExactETHForTokens{\\n            value: msg.value\\n        }(amountOutMin, path, address(this), deadline);\\n\\n        // send the token to the user\\n        IERC20(path[path.length - 1]).transfer(to, amounts[amounts.length - 1]);\\n    }\\n}\\n\",\"keccak256\":\"0xc6218e9ffe6eedf1833d456f452bd7690cc303c60708dce387417accbf7b9823\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161095938038061095983398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6108c6806100936000396000f3fe60806040526004361061004e5760003560e01c80631694505e1461005a5780637ff36ab514610096578063ad5c4648146100ab578063c45a0155146100c0578063f305d719146100d557600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5060005461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100a96100a436600461058a565b6100e8565b005b3480156100b757600080fd5b5061007a610250565b3480156100cc57600080fd5b5061007a6102cd565b6100a96100e3366004610624565b610321565b60008054604051637ff36ab560e01b81526001600160a01b0390911690637ff36ab5903490610123908a908a908a9030908a90600401610682565b60006040518083038185885af1158015610141573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261016a9190810190610704565b905084846101796001826107c2565b818110610188576101886107e9565b905060200201602081019061019d91906107ff565b6001600160a01b031663a9059cbb8483600185516101bb91906107c2565b815181106101cb576101cb6107e9565b60200260200101516040518363ffffffff1660e01b81526004016102049291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102479190610823565b50505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610845565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a4573d6000803e3d6000fd5b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018790529087169063095ea7b3906044016020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610823565b506000805460405163f305d71960e01b81526001600160a01b038981166004830152602482018990526044820188905260648201879052858116608483015260a482018590528392169063f305d71990349060c40160606040518083038185885af115801561040b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104309190610862565b5091509150803411156104d55760003361044a83346107c2565b604051600081818185875af1925050503d8060008114610486576040519150601f19603f3d011682016040523d82523d6000602084013e61048b565b606091505b50509050806104d35760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640160405180910390fd5b505b86821115610568576001600160a01b03881663a9059cbb336104f78a866107c2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610823565b505b5050505050505050565b6001600160a01b038116811461058757600080fd5b50565b6000806000806000608086880312156105a257600080fd5b85359450602086013567ffffffffffffffff808211156105c157600080fd5b818801915088601f8301126105d557600080fd5b8135818111156105e457600080fd5b8960208260051b85010111156105f957600080fd5b602083019650809550505050604086013561061381610572565b949793965091946060013592915050565b60008060008060008060c0878903121561063d57600080fd5b863561064881610572565b9550602087013594506040870135935060608701359250608087013561066d81610572565b8092505060a087013590509295509295509295565b85815260806020808301829052908201859052600090869060a08401835b888110156106ce5783356106b381610572565b6001600160a01b0316825292820192908201906001016106a0565b506001600160a01b03969096166040850152505050606001529392505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561071757600080fd5b825167ffffffffffffffff8082111561072f57600080fd5b818501915085601f83011261074357600080fd5b815181811115610755576107556106ee565b8060051b604051601f19603f8301168101818110858211171561077a5761077a6106ee565b60405291825284820192508381018501918883111561079857600080fd5b938501935b828510156107b65784518452938501939285019261079d565b98975050505050505050565b818103818111156107e357634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561081157600080fd5b813561081c81610572565b9392505050565b60006020828403121561083557600080fd5b8151801515811461081c57600080fd5b60006020828403121561085757600080fd5b815161081c81610572565b60008060006060848603121561087757600080fd5b835192506020840151915060408401519050925092509256fea264697066735822122029097ab6dbcec438ae0cad02edbae224b74ae636b6442dfedf370af64635636564736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80631694505e1461005a5780637ff36ab514610096578063ad5c4648146100ab578063c45a0155146100c0578063f305d719146100d557600080fd5b3661005557005b600080fd5b34801561006657600080fd5b5060005461007a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100a96100a436600461058a565b6100e8565b005b3480156100b757600080fd5b5061007a610250565b3480156100cc57600080fd5b5061007a6102cd565b6100a96100e3366004610624565b610321565b60008054604051637ff36ab560e01b81526001600160a01b0390911690637ff36ab5903490610123908a908a908a9030908a90600401610682565b60006040518083038185885af1158015610141573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261016a9190810190610704565b905084846101796001826107c2565b818110610188576101886107e9565b905060200201602081019061019d91906107ff565b6001600160a01b031663a9059cbb8483600185516101bb91906107c2565b815181106101cb576101cb6107e9565b60200260200101516040518363ffffffff1660e01b81526004016102049291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015610223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102479190610823565b50505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c89190610845565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a4573d6000803e3d6000fd5b60005460405163095ea7b360e01b81526001600160a01b039182166004820152602481018790529087169063095ea7b3906044016020604051808303816000875af1158015610374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103989190610823565b506000805460405163f305d71960e01b81526001600160a01b038981166004830152602482018990526044820188905260648201879052858116608483015260a482018590528392169063f305d71990349060c40160606040518083038185885af115801561040b573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906104309190610862565b5091509150803411156104d55760003361044a83346107c2565b604051600081818185875af1925050503d8060008114610486576040519150601f19603f3d011682016040523d82523d6000602084013e61048b565b606091505b50509050806104d35760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640160405180910390fd5b505b86821115610568576001600160a01b03881663a9059cbb336104f78a866107c2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190610823565b505b5050505050505050565b6001600160a01b038116811461058757600080fd5b50565b6000806000806000608086880312156105a257600080fd5b85359450602086013567ffffffffffffffff808211156105c157600080fd5b818801915088601f8301126105d557600080fd5b8135818111156105e457600080fd5b8960208260051b85010111156105f957600080fd5b602083019650809550505050604086013561061381610572565b949793965091946060013592915050565b60008060008060008060c0878903121561063d57600080fd5b863561064881610572565b9550602087013594506040870135935060608701359250608087013561066d81610572565b8092505060a087013590509295509295509295565b85815260806020808301829052908201859052600090869060a08401835b888110156106ce5783356106b381610572565b6001600160a01b0316825292820192908201906001016106a0565b506001600160a01b03969096166040850152505050606001529392505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561071757600080fd5b825167ffffffffffffffff8082111561072f57600080fd5b818501915085601f83011261074357600080fd5b815181811115610755576107556106ee565b8060051b604051601f19603f8301168101818110858211171561077a5761077a6106ee565b60405291825284820192508381018501918883111561079857600080fd5b938501935b828510156107b65784518452938501939285019261079d565b98975050505050505050565b818103818111156107e357634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561081157600080fd5b813561081c81610572565b9392505050565b60006020828403121561083557600080fd5b8151801515811461081c57600080fd5b60006020828403121561085757600080fd5b815161081c81610572565b60008060006060848603121561087757600080fd5b835192506020840151915060408401519050925092509256fea264697066735822122029097ab6dbcec438ae0cad02edbae224b74ae636b6442dfedf370af64635636564736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2060,
        "contract": "contracts/token/UniswapV2Wrapper.sol:UniswapV2Wrapper",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUniswapV2Router02)1243"
      }
    ],
    "types": {
      "t_contract(IUniswapV2Router02)1243": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02",
        "numberOfBytes": "20"
      }
    }
  }
}