{
  "address": "0x6BF49C62A715c33B912789D946D2d48769D942A6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_revShareFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buybackFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lpFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamFee",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_revShareWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_teamWallet",
          "type": "address"
        },
        {
          "internalType": "contract IUniswapV2Router02Wrapper",
          "name": "_uniswapV2Router",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EthSendingFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidFee",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountForLiquidity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountForRevShare",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountForTeam",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountForBuyBack",
          "type": "uint256"
        }
      ],
      "name": "Distribution",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "revShareFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buybackFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "teamFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFee",
          "type": "uint256"
        }
      ],
      "name": "FeesUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eth",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buybackFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ethDistributionThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revShareFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revShareWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newThreshold",
          "type": "uint256"
        }
      ],
      "name": "setEthDistributionThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_revShareFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_buybackFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_lpFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_teamFee",
          "type": "uint256"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newRevShareWallet",
          "type": "address"
        }
      ],
      "name": "setRevShareWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newTeamWallet",
          "type": "address"
        }
      ],
      "name": "setTeamWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02Wrapper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "toAddr",
          "type": "address"
        }
      ],
      "name": "withdrawStuckEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawStuckToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x56c5582261a9d9bc074af486a7626fcb01f4dce52c9fef2435e7d146d4ba5141",
  "receipt": {
    "to": null,
    "from": "0x9D5a2ddBb543E62e026b182C8929d099781547c3",
    "contractAddress": "0x6BF49C62A715c33B912789D946D2d48769D942A6",
    "transactionIndex": 1,
    "gasUsed": "4327567",
    "logsBloom": "0x
    "blockHash": "0x5835fa76d1b1b31bfe1aa6296b50e5372259e0f5ae1da91cb129fad1d018c8c6",
    "transactionHash": "0x56c5582261a9d9bc074af486a7626fcb01f4dce52c9fef2435e7d146d4ba5141",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 54973773,
        "transactionHash": "0x56c5582261a9d9bc074af486a7626fcb01f4dce52c9fef2435e7d146d4ba5141",
        "address": "0x6BF49C62A715c33B912789D946D2d48769D942A6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009d5a2ddbb543e62e026b182c8929d099781547c3"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5835fa76d1b1b31bfe1aa6296b50e5372259e0f5ae1da91cb129fad1d018c8c6"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 54973773,
        "transactionHash": "0x56c5582261a9d9bc074af486a7626fcb01f4dce52c9fef2435e7d146d4ba5141",
        "address": "0x25834549b190D506e7f6C75CD26f3CC9bfc7ebA4",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x0000000000000000000000006bf49c62a715c33b912789d946d2d48769d942a6",
          "0x000000000000000000000000ee01c0cd76354c383b8c7b4e65ea88d00b06f36f"
        ],
        "data": "0x0000000000000000000000007e496ab50afca90fccfd525af3d1a3ec9c39082e0000000000000000000000000000000000000000000000000000000000000007",
        "logIndex": 1,
        "blockHash": "0x5835fa76d1b1b31bfe1aa6296b50e5372259e0f5ae1da91cb129fad1d018c8c6"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 54973773,
        "transactionHash": "0x56c5582261a9d9bc074af486a7626fcb01f4dce52c9fef2435e7d146d4ba5141",
        "address": "0x6BF49C62A715c33B912789D946D2d48769D942A6",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009d5a2ddbb543e62e026b182c8929d099781547c3"
        ],
        "data": "0x00000000000000000000000000000000000000000000d3c21bcecceda1000000",
        "logIndex": 2,
        "blockHash": "0x5835fa76d1b1b31bfe1aa6296b50e5372259e0f5ae1da91cb129fad1d018c8c6"
      }
    ],
    "blockNumber": 54973773,
    "cumulativeGasUsed": "4327567",
    "status": 1,
    "byzantium": true
  },
  "args": [
    30,
    20,
    20,
    30,
    "0xAA94aC4117050cf14647bD78a0643D2f57928cF7",
    "0x9D5a2ddBb543E62e026b182C8929d099781547c3",
    "0xF02c6b1318045DD9D986185ed11fB653E352aEFc"
  ],
  "numDeployments": 6,
  "solcInputHash": "21224dafbe79f1aeaca58bcca8b058a7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revShareFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buybackFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lpFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_revShareWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02Wrapper\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EthSendingFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFee\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountForLiquidity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountForRevShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountForTeam\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountForBuyBack\",\"type\":\"uint256\"}],\"name\":\"Distribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"revShareFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buybackFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buybackFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethDistributionThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revShareFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revShareWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newThreshold\",\"type\":\"uint256\"}],\"name\":\"setEthDistributionThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_revShareFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_buybackFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lpFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_teamFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRevShareWallet\",\"type\":\"address\"}],\"name\":\"setRevShareWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTeamWallet\",\"type\":\"address\"}],\"name\":\"setTeamWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02Wrapper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddr\",\"type\":\"address\"}],\"name\":\"withdrawStuckEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawStuckToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets up the AuctionToken contract with predefined fees and Uniswap router.\",\"params\":{\"_buybackFee\":\"Initial buyback fee.\",\"_lpFee\":\"Initial liquidity provider fee.\",\"_revShareFee\":\"Initial revenue share fee.\",\"_revShareWallet\":\"Address of the revenue sharing wallet.\",\"_teamFee\":\"Initial team fee.\",\"_teamWallet\":\"Address of the team wallet.\",\"_uniswapV2Router\":\"Address of the UniswapV2Router.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"executeDistribution()\":{\"details\":\"This function should be called to trigger the distribution mechanism manually.      It requires the caller to be the contract owner. It will call the internal function      `_executeDistribution` with the contract's current token balance.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setEthDistributionThreshold(uint256)\":{\"details\":\"Sets a new threshold for when ETH distribution should occur\",\"params\":{\"_newThreshold\":\"The new threshold in wei\"}},\"setFees(uint256,uint256,uint256,uint256)\":{\"details\":\"Updates fee percentages and recalculates the total fee\",\"params\":{\"_buybackFee\":\"The new buyback fee percentage\",\"_lpFee\":\"The new liquidity provider fee percentage\",\"_revShareFee\":\"The new revenue share fee percentage\",\"_teamFee\":\"The new team fee percentage\"}},\"setRevShareWallet(address)\":{\"details\":\"Sets a new revenue share wallet address\",\"params\":{\"_newRevShareWallet\":\"The new wallet address for revenue sharing\"}},\"setTeamWallet(address)\":{\"details\":\"Sets a new team wallet address\",\"params\":{\"_newTeamWallet\":\"The new wallet address for the team\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawStuckEth(address)\":{\"details\":\"Allows the owner to withdraw ETH sent to the contract.\",\"params\":{\"toAddr\":\"Address to send the ETH to.\"}},\"withdrawStuckToken(address,address)\":{\"details\":\"Allows the owner to withdraw any ERC20 token sent to the contract.\",\"params\":{\"_to\":\"Address to send the tokens to.\",\"_token\":\"Address of the token contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeDistribution()\":{\"notice\":\"Executes the distribution of contract's token balance for liquidity, revenue sharing, team, and buyback.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/AuctionToken.sol\":\"AuctionToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IUniswapV2Factory.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\ninterface IUniswapV2Factory {\\n    event PairCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        address pair,\\n        uint256\\n    );\\n\\n    function feeTo() external view returns (address);\\n\\n    function feeToSetter() external view returns (address);\\n\\n    function getPair(\\n        address tokenA,\\n        address tokenB\\n    ) external view returns (address pair);\\n\\n    function allPairs(uint256) external view returns (address pair);\\n\\n    function allPairsLength() external view returns (uint256);\\n\\n    function createPair(\\n        address tokenA,\\n        address tokenB\\n    ) external returns (address pair);\\n\\n    function setFeeTo(address) external;\\n\\n    function setFeeToSetter(address) external;\\n}\\n\",\"keccak256\":\"0xaaae6336c8db78cedbd0ef1e901b832498cd638688daf263919b7b11f6a5dd14\"},\"contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function name() external pure returns (string memory);\\n\\n    function symbol() external pure returns (string memory);\\n\\n    function decimals() external pure returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    function nonces(address owner) external view returns (uint256);\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\n    event Burn(\\n        address indexed sender,\\n        uint256 amount0,\\n        uint256 amount1,\\n        address indexed to\\n    );\\n    event Swap(\\n        address indexed sender,\\n        uint256 amount0In,\\n        uint256 amount1In,\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\n\\n    function factory() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function getReserves()\\n        external\\n        view\\n        returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n\\n    function price0CumulativeLast() external view returns (uint256);\\n\\n    function price1CumulativeLast() external view returns (uint256);\\n\\n    function kLast() external view returns (uint256);\\n\\n    function mint(address to) external returns (uint256 liquidity);\\n\\n    function burn(\\n        address to\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external;\\n\\n    function skim(address to) external;\\n\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x9f0ddaa1eb67884f4d958b9d7904260ff05abec7c9af91c92802888fb4b6d00b\"},\"contracts/interfaces/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\ninterface IUniswapV2Router02 {\\n    function factory() external pure returns (address);\\n\\n    function WETH() external pure returns (address);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint256 amountADesired,\\n        uint256 amountBDesired,\\n        uint256 amountAMin,\\n        uint256 amountBMin,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountA, uint256 amountB, uint256 liquidity);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint256 amountTokenDesired,\\n        uint256 amountTokenMin,\\n        uint256 amountETHMin,\\n        address to,\\n        uint256 deadline\\n    )\\n        external\\n        payable\\n        returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\\n\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external;\\n\\n    function swapExactETHForTokens(\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external payable returns (uint[] memory amounts);\\n}\\n\",\"keccak256\":\"0xb97ee5f4093f254670f5d11e2632a0470c2408f5ccc8ba95b311d92d0fa85f6e\"},\"contracts/interfaces/IUniswapV2Router02Wrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./IUniswapV2Router02.sol\\\";\\n\\ninterface IUniswapV2Router02Wrapper {\\n    function uniswapV2Router() external view returns (IUniswapV2Router02);\\n\\n    function factory() external view returns (address);\\n\\n    function WETH() external view returns (address);\\n\\n    function addLiquidityETH(\\n        address token,\\n        uint amountTokenDesired,\\n        uint amountTokenMin,\\n        uint amountETHMin,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xac96d52f2e2183638658fc77a1dccca26e293c917277426723b5a55d04c3a11d\",\"license\":\"MIT\"},\"contracts/token/AuctionToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"../interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"../interfaces/IUniswapV2Factory.sol\\\";\\nimport \\\"../interfaces/IUniswapV2Router02Wrapper.sol\\\";\\n\\ncontract AuctionToken is ERC20, Ownable {\\n    IUniswapV2Router02Wrapper public uniswapV2Router;\\n    address public immutable uniswapV2Pair;\\n\\n    uint256 public revShareFee;\\n    uint256 public buybackFee;\\n    uint256 public lpFee;\\n    uint256 public teamFee;\\n    uint256 public totalFee;\\n\\n    uint256 public ethDistributionThreshold = 1 ether;\\n\\n    uint256 public constant BASE = 100;\\n\\n    address public revShareWallet;\\n    address public teamWallet;\\n\\n    // ========== EVENTS ==========\\n\\n    event LiquidityAdded(uint256 tokens, uint256 eth);\\n    event Distribution(\\n        uint256 amountForLiquidity,\\n        uint256 amountForRevShare,\\n        uint256 amountForTeam,\\n        uint256 amountForBuyBack\\n    );\\n    event FeesUpdated(\\n        uint256 revShareFee,\\n        uint256 buybackFee,\\n        uint256 lpFee,\\n        uint256 teamFee,\\n        uint256 totalFee\\n    );\\n\\n    // ========== ERRORS ==========\\n\\n    error InvalidFee();\\n    error EthSendingFailed();\\n\\n    // ========== CONSTRUCTOR ==========\\n\\n    /**\\n     * @dev Sets up the AuctionToken contract with predefined fees and Uniswap router.\\n     * @param _revShareFee Initial revenue share fee.\\n     * @param _buybackFee Initial buyback fee.\\n     * @param _lpFee Initial liquidity provider fee.\\n     * @param _teamFee Initial team fee.\\n     * @param _revShareWallet Address of the revenue sharing wallet.\\n     * @param _teamWallet Address of the team wallet.\\n     * @param _uniswapV2Router Address of the UniswapV2Router.\\n     */\\n    constructor(\\n        uint256 _revShareFee,\\n        uint256 _buybackFee,\\n        uint256 _lpFee,\\n        uint256 _teamFee,\\n        address _revShareWallet,\\n        address _teamWallet,\\n        IUniswapV2Router02Wrapper _uniswapV2Router\\n    ) ERC20(\\\"Auction\\\", \\\"AUCTION\\\") {\\n        uniswapV2Router = _uniswapV2Router;\\n\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\n            .createPair(address(this), _uniswapV2Router.WETH());\\n\\n        uint256 totalSupply = 1_000_000 * 1e18;\\n\\n        revShareFee = _revShareFee;\\n        buybackFee = _buybackFee;\\n        lpFee = _lpFee;\\n        teamFee = _teamFee;\\n        totalFee = revShareFee + buybackFee + lpFee + teamFee;\\n\\n        if (totalFee != BASE) {\\n            revert InvalidFee();\\n        }\\n\\n        revShareWallet = _revShareWallet;\\n\\n        teamWallet = _teamWallet;\\n\\n        _mint(msg.sender, totalSupply);\\n    }\\n\\n    // ========== PUBLIC FUNCTIONS ==========\\n\\n    /**\\n     * @dev Public receive function to allow the contract to receive ETH.\\n     */\\n    receive() external payable {}\\n\\n    // ========== ONLYOWNER (ADMIN) FUNCTIONS ==========\\n\\n    /**\\n     * @notice Executes the distribution of contract's token balance for liquidity, revenue sharing, team, and buyback.\\n     * @dev This function should be called to trigger the distribution mechanism manually.\\n     *      It requires the caller to be the contract owner. It will call the internal function\\n     *      `_executeDistribution` with the contract's current token balance.\\n     */\\n    function executeDistribution() external onlyOwner {\\n        uint256 contractEthBalance = address(this).balance;\\n\\n        _executeDistribution(contractEthBalance);\\n    }\\n\\n    /**\\n     * @dev Sets a new revenue share wallet address\\n     * @param _newRevShareWallet The new wallet address for revenue sharing\\n     */\\n    function setRevShareWallet(address _newRevShareWallet) external onlyOwner {\\n        require(\\n            _newRevShareWallet != address(0),\\n            \\\"New address is the zero address\\\"\\n        );\\n        require(\\n            _newRevShareWallet != revShareWallet,\\n            \\\"New address is the same as current address\\\"\\n        );\\n        revShareWallet = _newRevShareWallet;\\n    }\\n\\n    /**\\n     * @dev Sets a new team wallet address\\n     * @param _newTeamWallet The new wallet address for the team\\n     */\\n    function setTeamWallet(address _newTeamWallet) external onlyOwner {\\n        require(\\n            _newTeamWallet != address(0),\\n            \\\"New address is the zero address\\\"\\n        );\\n        require(\\n            _newTeamWallet != teamWallet,\\n            \\\"New address is the same as current address\\\"\\n        );\\n        teamWallet = _newTeamWallet;\\n    }\\n\\n    /**\\n     * @dev Updates fee percentages and recalculates the total fee\\n     * @param _revShareFee The new revenue share fee percentage\\n     * @param _buybackFee The new buyback fee percentage\\n     * @param _lpFee The new liquidity provider fee percentage\\n     * @param _teamFee The new team fee percentage\\n     */\\n    function setFees(\\n        uint256 _revShareFee,\\n        uint256 _buybackFee,\\n        uint256 _lpFee,\\n        uint256 _teamFee\\n    ) external onlyOwner {\\n        // Include validation to ensure that fees are within reasonable bounds\\n        uint256 newTotalFee = _revShareFee + _buybackFee + _lpFee + _teamFee;\\n        require(newTotalFee <= BASE, \\\"Total fee exceeds the limit\\\");\\n\\n        // Update individual fees\\n        revShareFee = _revShareFee;\\n        buybackFee = _buybackFee;\\n        lpFee = _lpFee;\\n        teamFee = _teamFee;\\n\\n        // Update total fee\\n        totalFee = newTotalFee;\\n\\n        // Emit an event to notify off-chain clients of the fee update\\n        emit FeesUpdated(revShareFee, buybackFee, lpFee, teamFee, totalFee);\\n    }\\n\\n    /**\\n     * @dev Sets a new threshold for when ETH distribution should occur\\n     * @param _newThreshold The new threshold in wei\\n     */\\n    function setEthDistributionThreshold(\\n        uint256 _newThreshold\\n    ) external onlyOwner {\\n        require(_newThreshold > 0, \\\"Threshold must be greater than 0\\\");\\n        ethDistributionThreshold = _newThreshold;\\n    }\\n\\n    /**\\n     * @dev Allows the owner to withdraw any ERC20 token sent to the contract.\\n     * @param _token Address of the token contract.\\n     * @param _to Address to send the tokens to.\\n     */\\n    function withdrawStuckToken(\\n        address _token,\\n        address _to\\n    ) external onlyOwner {\\n        require(_token != address(0), \\\"_token address cannot be 0\\\");\\n        uint256 _contractBalance = IERC20(_token).balanceOf(address(this));\\n        IERC20(_token).transfer(_to, _contractBalance);\\n    }\\n\\n    /**\\n     * @dev Allows the owner to withdraw ETH sent to the contract.\\n     * @param toAddr Address to send the ETH to.\\n     */\\n    function withdrawStuckEth(address toAddr) external onlyOwner {\\n        (bool success, ) = toAddr.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    // ========== OVERRIDES ==========\\n\\n    /**\\n     * @dev Override function for ERC20 transfer to incorporate fee distribution.\\n     * @param from Address tokens are being transferred from.\\n     * @param to Address tokens are being transferred to.\\n     * @param amount Amount of tokens to transfer.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        if (amount == 0) {\\n            super._transfer(from, to, 0);\\n            return;\\n        }\\n\\n        uint256 contractEthBalance = address(this).balance;\\n\\n        if (\\n            contractEthBalance >= ethDistributionThreshold &&\\n            msg.sender != address(this) &&\\n            msg.sender != address(uniswapV2Router) &&\\n            msg.sender != address(uniswapV2Router.uniswapV2Router()) &&\\n            msg.sender != uniswapV2Pair &&\\n            msg.sender != owner()\\n        ) {\\n            _executeDistribution(contractEthBalance);\\n        }\\n\\n        super._transfer(from, to, amount);\\n    }\\n\\n    // ========== PRIVATE FUNCTIONS ==========\\n\\n    /**\\n     * @dev Executes distribution of ETH for liquidity, revenue share, team, and buyback.\\n     * @param contractEthBalance Amount of ETH to distribute.\\n     */\\n    function _executeDistribution(uint256 contractEthBalance) private {\\n        // Calculate amounts for each fee\\n        uint256 amountForLiquidity = (contractEthBalance * lpFee) / totalFee;\\n        uint256 amountForRevShare = (contractEthBalance * revShareFee) /\\n            totalFee;\\n        uint256 amountForTeam = (contractEthBalance * teamFee) / totalFee;\\n        uint256 amountForBuyBack = contractEthBalance -\\n            amountForLiquidity -\\n            amountForRevShare -\\n            amountForTeam;\\n\\n        // Swap ETH for Auction for buyback and lp\\n        uint256 ethLiquidity = amountForLiquidity / 2;\\n        uint256 amountToSwap = amountForBuyBack + ethLiquidity;\\n\\n        uint256 initialTokenBalance = balanceOf(address(this));\\n        _swapEthForTokens(amountToSwap);\\n\\n        uint256 tokensBought = balanceOf(address(this)) - initialTokenBalance;\\n        uint256 tokensLiquidity = (tokensBought * ethLiquidity) / amountToSwap;\\n\\n        if (tokensLiquidity > 0 && ethLiquidity > 0) {\\n            _addLiquidity(tokensLiquidity, ethLiquidity);\\n            emit LiquidityAdded(tokensLiquidity, ethLiquidity);\\n        }\\n\\n        bool success;\\n        // send to team addy\\n        (success, ) = address(teamWallet).call{value: amountForTeam}(\\\"\\\");\\n\\n        if (!success) revert EthSendingFailed();\\n\\n        // send to rev sharing addy\\n        (success, ) = address(revShareWallet).call{value: amountForRevShare}(\\n            \\\"\\\"\\n        );\\n\\n        if (!success) revert EthSendingFailed();\\n\\n        // emit event\\n        emit Distribution(\\n            amountForLiquidity,\\n            amountForRevShare,\\n            amountForTeam,\\n            amountForBuyBack\\n        );\\n    }\\n\\n    function _addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\n        // send tokens to the wrapper\\n        _transfer(address(this), address(uniswapV2Router), tokenAmount);\\n        // add the liquidity\\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\\n            address(this),\\n            tokenAmount,\\n            0, // slippage is unavoidable\\n            0, // slippage is unavoidable\\n            owner(),\\n            block.timestamp\\n        );\\n    }\\n\\n    function _swapEthForTokens(uint256 ethAmount) private {\\n        // generate the uniswap pair path of token -> weth\\n        address[] memory path = new address[](2);\\n        path[0] = uniswapV2Router.WETH();\\n        path[1] = address(this);\\n\\n        // make the swap\\n        uniswapV2Router.swapExactETHForTokens{value: ethAmount}(\\n            0, // accept any amount of Tokens\\n            path,\\n            address(this),\\n            block.timestamp\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xfe3f007703ffa0f03989dd9bbd0771c4d0ddf2132edd9979140da5b734e3a86c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052670de0b6b3a7640000600c553480156200001d57600080fd5b506040516200207738038062002077833981016040819052620000409162000420565b6040518060400160405280600781526020016620bab1ba34b7b760c91b8152506040518060400160405280600781526020016620aaa1aa24a7a760c91b81525081600390816200009191906200053f565b506004620000a082826200053f565b505050620000bd620000b7620002e660201b60201c565b620002ea565b600680546001600160a01b0319166001600160a01b0383169081179091556040805163c45a015560e01b8152905163c45a0155916004808201926020929091908290030181865afa15801562000117573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013d91906200060b565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b191906200060b565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af1158015620001ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200022591906200060b565b6001600160a01b0316608052600787905560088690556009859055600a84905569d3c21bcecceda100000084866200025e898b62000632565b6200026a919062000632565b62000276919062000632565b600b8190556064146200029c576040516358d620b360e01b815260040160405180910390fd5b600d80546001600160a01b038087166001600160a01b031992831617909255600e805492861692909116919091179055620002d833826200033c565b50505050505050506200065a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620003975760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620003ab919062000632565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b6001600160a01b03811681146200041d57600080fd5b50565b600080600080600080600060e0888a0312156200043c57600080fd5b875196506020880151955060408801519450606088015193506080880151620004658162000407565b60a0890151909350620004788162000407565b60c08901519092506200048b8162000407565b8091505092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620004c657607f821691505b602082108103620004e757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200040257600081815260208120601f850160051c81016020861015620005165750805b601f850160051c820191505b81811015620005375782815560010162000522565b505050505050565b81516001600160401b038111156200055b576200055b6200049b565b62000573816200056c8454620004b1565b84620004ed565b602080601f831160018114620005ab5760008415620005925750858301515b600019600386901b1c1916600185901b17855562000537565b600085815260208120601f198616915b82811015620005dc57888601518255948401946001909101908401620005bb565b5085821015620005fb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200061e57600080fd5b81516200062b8162000407565b9392505050565b808201808211156200065457634e487b7160e01b600052601160045260246000fd5b92915050565b6080516119fa6200067d600039600081816103810152610fbb01526119fa6000f3fe6080604052600436106101e75760003560e01c8063715018a611610102578063a9059cbb11610095578063dd62ed3e11610064578063dd62ed3e14610579578063ec342ad014610599578063f2fde38b146105ae578063ff0ed114146105ce57600080fd5b8063a9059cbb14610503578063b94cb5c414610523578063bc205ad314610543578063d7c94efd1461056357600080fd5b80638da5cb5b116100d15780638da5cb5b1461049a57806395d89b41146104b8578063a0bf7a51146104cd578063a457c2d7146104e357600080fd5b8063715018a61461042f57806372cacded14610444578063782c4e991461045a5780637ca8448a1461047a57600080fd5b8063313ce5671161017a578063599270441161014957806359927044146103a35780636fcba377146103c3578063704ce43e146103e357806370a08231146103f957600080fd5b8063313ce5671461031d57806339509351146103395780633b2d081c1461035957806349bd5a5e1461036f57600080fd5b806318160ddd116101b657806318160ddd146102a85780631bddb706146102c75780631df4ccfc146102e757806323b872dd146102fd57600080fd5b806306fdde03146101f3578063095ea7b31461021e5780631525ff7d1461024e5780631694505e1461027057600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b506102086105e3565b60405161021591906115f3565b60405180910390f35b34801561022a57600080fd5b5061023e610239366004611656565b610675565b6040519015158152602001610215565b34801561025a57600080fd5b5061026e610269366004611682565b61068f565b005b34801561027c57600080fd5b50600654610290906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b3480156102b457600080fd5b506002545b604051908152602001610215565b3480156102d357600080fd5b5061026e6102e2366004611682565b610742565b3480156102f357600080fd5b506102b9600b5481565b34801561030957600080fd5b5061023e6103183660046116a6565b6107f0565b34801561032957600080fd5b5060405160128152602001610215565b34801561034557600080fd5b5061023e610354366004611656565b610814565b34801561036557600080fd5b506102b960085481565b34801561037b57600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b3480156103af57600080fd5b50600e54610290906001600160a01b031681565b3480156103cf57600080fd5b5061026e6103de3660046116e7565b610836565b3480156103ef57600080fd5b506102b960095481565b34801561040557600080fd5b506102b9610414366004611682565b6001600160a01b031660009081526020819052604090205490565b34801561043b57600080fd5b5061026e610922565b34801561045057600080fd5b506102b960075481565b34801561046657600080fd5b50600d54610290906001600160a01b031681565b34801561048657600080fd5b5061026e610495366004611682565b610936565b3480156104a657600080fd5b506005546001600160a01b0316610290565b3480156104c457600080fd5b506102086109a2565b3480156104d957600080fd5b506102b9600c5481565b3480156104ef57600080fd5b5061023e6104fe366004611656565b6109b1565b34801561050f57600080fd5b5061023e61051e366004611656565b610a2c565b34801561052f57600080fd5b5061026e61053e366004611719565b610a3a565b34801561054f57600080fd5b5061026e61055e366004611732565b610a97565b34801561056f57600080fd5b506102b9600a5481565b34801561058557600080fd5b506102b9610594366004611732565b610bdd565b3480156105a557600080fd5b506102b9606481565b3480156105ba57600080fd5b5061026e6105c9366004611682565b610c08565b3480156105da57600080fd5b5061026e610c81565b6060600380546105f29061176b565b80601f016020809104026020016040519081016040528092919081815260200182805461061e9061176b565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b5050505050905090565b600033610683818585610c93565b60019150505b92915050565b610697610db7565b6001600160a01b0381166106f25760405162461bcd60e51b815260206004820152601f60248201527f4e6577206164647265737320697320746865207a65726f20616464726573730060448201526064015b60405180910390fd5b600e546001600160a01b03908116908216036107205760405162461bcd60e51b81526004016106e9906117a5565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b61074a610db7565b6001600160a01b0381166107a05760405162461bcd60e51b815260206004820152601f60248201527f4e6577206164647265737320697320746865207a65726f20616464726573730060448201526064016106e9565b600d546001600160a01b03908116908216036107ce5760405162461bcd60e51b81526004016106e9906117a5565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000336107fe858285610e11565b610809858585610e85565b506001949350505050565b6000336106838185856108278383610bdd565b6108319190611805565b610c93565b61083e610db7565b6000818361084c8688611805565b6108569190611805565b6108609190611805565b905060648111156108b35760405162461bcd60e51b815260206004820152601b60248201527f546f74616c20666565206578636565647320746865206c696d6974000000000060448201526064016106e9565b600785905560088490556009839055600a829055600b819055604080518681526020810186905290810184905260608101839052608081018290527f96b67df2c4648b38ada47da86f80d0a256df93150752a7b365ca487cab934e649060a00160405180910390a15050505050565b61092a610db7565b610934600061100e565b565b61093e610db7565b6000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461098b576040519150601f19603f3d011682016040523d82523d6000602084013e610990565b606091505b505090508061099e57600080fd5b5050565b6060600480546105f29061176b565b600033816109bf8286610bdd565b905083811015610a1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e9565b6108098286868403610c93565b600033610683818585610e85565b610a42610db7565b60008111610a925760405162461bcd60e51b815260206004820181905260248201527f5468726573686f6c64206d7573742062652067726561746572207468616e203060448201526064016106e9565b600c55565b610a9f610db7565b6001600160a01b038216610af55760405162461bcd60e51b815260206004820152601a60248201527f5f746f6b656e20616464726573732063616e6e6f74206265203000000000000060448201526064016106e9565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b609190611818565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390529192509084169063a9059cbb906044016020604051808303816000875af1158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611831565b50505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610c10610db7565b6001600160a01b038116610c755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e9565b610c7e8161100e565b50565b610c89610db7565b47610c7e81611060565b6001600160a01b038316610cf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e9565b6001600160a01b038216610d565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146109345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e9565b6000610e1d8484610bdd565b90506000198114610bd75781811015610e785760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e9565b610bd78484848403610c93565b6001600160a01b038316610eab5760405162461bcd60e51b81526004016106e990611853565b6001600160a01b038216610ed15760405162461bcd60e51b81526004016106e990611898565b80600003610eea57610ee5838360006112e8565b505050565b600c5447908110801590610efe5750333014155b8015610f1557506006546001600160a01b03163314155b8015610fa95750600660009054906101000a90046001600160a01b03166001600160a01b0316631694505e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9391906118db565b6001600160a01b0316336001600160a01b031614155b8015610fde5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b8015610ff557506005546001600160a01b03163314155b156110035761100381611060565b610bd78484846112e8565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600b546009548361107391906118f8565b61107d919061190f565b90506000600b546007548461109291906118f8565b61109c919061190f565b90506000600b54600a54856110b191906118f8565b6110bb919061190f565b9050600081836110cb8688611931565b6110d59190611931565b6110df9190611931565b905060006110ee60028661190f565b905060006110fc8284611805565b3060009081526020819052604090205490915061111882611412565b30600090815260208190526040812054611133908390611931565b905060008361114286846118f8565b61114c919061190f565b905060008111801561115e5750600085115b156111a75761116d8186611563565b60408051828152602081018790527f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b910160405180910390a15b600e546040516000916001600160a01b03169089908381818185875af1925050503d80600081146111f4576040519150601f19603f3d011682016040523d82523d6000602084013e6111f9565b606091505b5050809150508061121d576040516308981c1360e21b815260040160405180910390fd5b600d546040516001600160a01b03909116908a90600081818185875af1925050503d806000811461126a576040519150601f19603f3d011682016040523d82523d6000602084013e61126f565b606091505b50508091505080611293576040516308981c1360e21b815260040160405180910390fd5b604080518b8152602081018b9052908101899052606081018890527ffb4a5e7948adda6cd32ae844cf077ea8c7c22549a8eb0aabfc739fe2f57684479060800160405180910390a15050505050505050505050565b6001600160a01b03831661130e5760405162461bcd60e51b81526004016106e990611853565b6001600160a01b0382166113345760405162461bcd60e51b81526004016106e990611898565b6001600160a01b038316600090815260208190526040902054818110156113ac5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610bd7565b6040805160028082526060820183526000926020830190803683375050600654604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a091906118db565b816000815181106114b3576114b3611944565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106114e7576114e7611944565b6001600160a01b039283166020918202929092010152600654604051637ff36ab560e01b8152911690637ff36ab590849061152d9060009086903090429060040161195a565b6000604051808303818588803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b50505050505050565b60065461157b9030906001600160a01b031684610e85565b6006546001600160a01b031663f305d7198230856000806115a46005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40161152d565b600060208083528351808285015260005b8181101561162057858101830151858201604001528201611604565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610c7e57600080fd5b6000806040838503121561166957600080fd5b823561167481611641565b946020939093013593505050565b60006020828403121561169457600080fd5b813561169f81611641565b9392505050565b6000806000606084860312156116bb57600080fd5b83356116c681611641565b925060208401356116d681611641565b929592945050506040919091013590565b600080600080608085870312156116fd57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561172b57600080fd5b5035919050565b6000806040838503121561174557600080fd5b823561175081611641565b9150602083013561176081611641565b809150509250929050565b600181811c9082168061177f57607f821691505b60208210810361179f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602a908201527f4e65772061646472657373206973207468652073616d652061732063757272656040820152696e74206164647265737360b01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610689576106896117ef565b60006020828403121561182a57600080fd5b5051919050565b60006020828403121561184357600080fd5b8151801515811461169f57600080fd5b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6000602082840312156118ed57600080fd5b815161169f81611641565b8082028115828204841417610689576106896117ef565b60008261192c57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610689576106896117ef565b634e487b7160e01b600052603260045260246000fd5b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156119a45784516001600160a01b03168352938301939183019160010161197f565b50506001600160a01b03969096166040850152505050606001529291505056fea2646970667358221220ea2c4ba8b848ec4168efea74d21b1b40f79ec4dcf1a488ddfc6663df27d9d98d64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101e75760003560e01c8063715018a611610102578063a9059cbb11610095578063dd62ed3e11610064578063dd62ed3e14610579578063ec342ad014610599578063f2fde38b146105ae578063ff0ed114146105ce57600080fd5b8063a9059cbb14610503578063b94cb5c414610523578063bc205ad314610543578063d7c94efd1461056357600080fd5b80638da5cb5b116100d15780638da5cb5b1461049a57806395d89b41146104b8578063a0bf7a51146104cd578063a457c2d7146104e357600080fd5b8063715018a61461042f57806372cacded14610444578063782c4e991461045a5780637ca8448a1461047a57600080fd5b8063313ce5671161017a578063599270441161014957806359927044146103a35780636fcba377146103c3578063704ce43e146103e357806370a08231146103f957600080fd5b8063313ce5671461031d57806339509351146103395780633b2d081c1461035957806349bd5a5e1461036f57600080fd5b806318160ddd116101b657806318160ddd146102a85780631bddb706146102c75780631df4ccfc146102e757806323b872dd146102fd57600080fd5b806306fdde03146101f3578063095ea7b31461021e5780631525ff7d1461024e5780631694505e1461027057600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b506102086105e3565b60405161021591906115f3565b60405180910390f35b34801561022a57600080fd5b5061023e610239366004611656565b610675565b6040519015158152602001610215565b34801561025a57600080fd5b5061026e610269366004611682565b61068f565b005b34801561027c57600080fd5b50600654610290906001600160a01b031681565b6040516001600160a01b039091168152602001610215565b3480156102b457600080fd5b506002545b604051908152602001610215565b3480156102d357600080fd5b5061026e6102e2366004611682565b610742565b3480156102f357600080fd5b506102b9600b5481565b34801561030957600080fd5b5061023e6103183660046116a6565b6107f0565b34801561032957600080fd5b5060405160128152602001610215565b34801561034557600080fd5b5061023e610354366004611656565b610814565b34801561036557600080fd5b506102b960085481565b34801561037b57600080fd5b506102907f000000000000000000000000000000000000000000000000000000000000000081565b3480156103af57600080fd5b50600e54610290906001600160a01b031681565b3480156103cf57600080fd5b5061026e6103de3660046116e7565b610836565b3480156103ef57600080fd5b506102b960095481565b34801561040557600080fd5b506102b9610414366004611682565b6001600160a01b031660009081526020819052604090205490565b34801561043b57600080fd5b5061026e610922565b34801561045057600080fd5b506102b960075481565b34801561046657600080fd5b50600d54610290906001600160a01b031681565b34801561048657600080fd5b5061026e610495366004611682565b610936565b3480156104a657600080fd5b506005546001600160a01b0316610290565b3480156104c457600080fd5b506102086109a2565b3480156104d957600080fd5b506102b9600c5481565b3480156104ef57600080fd5b5061023e6104fe366004611656565b6109b1565b34801561050f57600080fd5b5061023e61051e366004611656565b610a2c565b34801561052f57600080fd5b5061026e61053e366004611719565b610a3a565b34801561054f57600080fd5b5061026e61055e366004611732565b610a97565b34801561056f57600080fd5b506102b9600a5481565b34801561058557600080fd5b506102b9610594366004611732565b610bdd565b3480156105a557600080fd5b506102b9606481565b3480156105ba57600080fd5b5061026e6105c9366004611682565b610c08565b3480156105da57600080fd5b5061026e610c81565b6060600380546105f29061176b565b80601f016020809104026020016040519081016040528092919081815260200182805461061e9061176b565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b5050505050905090565b600033610683818585610c93565b60019150505b92915050565b610697610db7565b6001600160a01b0381166106f25760405162461bcd60e51b815260206004820152601f60248201527f4e6577206164647265737320697320746865207a65726f20616464726573730060448201526064015b60405180910390fd5b600e546001600160a01b03908116908216036107205760405162461bcd60e51b81526004016106e9906117a5565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b61074a610db7565b6001600160a01b0381166107a05760405162461bcd60e51b815260206004820152601f60248201527f4e6577206164647265737320697320746865207a65726f20616464726573730060448201526064016106e9565b600d546001600160a01b03908116908216036107ce5760405162461bcd60e51b81526004016106e9906117a5565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6000336107fe858285610e11565b610809858585610e85565b506001949350505050565b6000336106838185856108278383610bdd565b6108319190611805565b610c93565b61083e610db7565b6000818361084c8688611805565b6108569190611805565b6108609190611805565b905060648111156108b35760405162461bcd60e51b815260206004820152601b60248201527f546f74616c20666565206578636565647320746865206c696d6974000000000060448201526064016106e9565b600785905560088490556009839055600a829055600b819055604080518681526020810186905290810184905260608101839052608081018290527f96b67df2c4648b38ada47da86f80d0a256df93150752a7b365ca487cab934e649060a00160405180910390a15050505050565b61092a610db7565b610934600061100e565b565b61093e610db7565b6000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461098b576040519150601f19603f3d011682016040523d82523d6000602084013e610990565b606091505b505090508061099e57600080fd5b5050565b6060600480546105f29061176b565b600033816109bf8286610bdd565b905083811015610a1f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e9565b6108098286868403610c93565b600033610683818585610e85565b610a42610db7565b60008111610a925760405162461bcd60e51b815260206004820181905260248201527f5468726573686f6c64206d7573742062652067726561746572207468616e203060448201526064016106e9565b600c55565b610a9f610db7565b6001600160a01b038216610af55760405162461bcd60e51b815260206004820152601a60248201527f5f746f6b656e20616464726573732063616e6e6f74206265203000000000000060448201526064016106e9565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b609190611818565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018390529192509084169063a9059cbb906044016020604051808303816000875af1158015610bb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd79190611831565b50505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610c10610db7565b6001600160a01b038116610c755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e9565b610c7e8161100e565b50565b610c89610db7565b47610c7e81611060565b6001600160a01b038316610cf55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e9565b6001600160a01b038216610d565760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146109345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e9565b6000610e1d8484610bdd565b90506000198114610bd75781811015610e785760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e9565b610bd78484848403610c93565b6001600160a01b038316610eab5760405162461bcd60e51b81526004016106e990611853565b6001600160a01b038216610ed15760405162461bcd60e51b81526004016106e990611898565b80600003610eea57610ee5838360006112e8565b505050565b600c5447908110801590610efe5750333014155b8015610f1557506006546001600160a01b03163314155b8015610fa95750600660009054906101000a90046001600160a01b03166001600160a01b0316631694505e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9391906118db565b6001600160a01b0316336001600160a01b031614155b8015610fde5750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b8015610ff557506005546001600160a01b03163314155b156110035761100381611060565b610bd78484846112e8565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600b546009548361107391906118f8565b61107d919061190f565b90506000600b546007548461109291906118f8565b61109c919061190f565b90506000600b54600a54856110b191906118f8565b6110bb919061190f565b9050600081836110cb8688611931565b6110d59190611931565b6110df9190611931565b905060006110ee60028661190f565b905060006110fc8284611805565b3060009081526020819052604090205490915061111882611412565b30600090815260208190526040812054611133908390611931565b905060008361114286846118f8565b61114c919061190f565b905060008111801561115e5750600085115b156111a75761116d8186611563565b60408051828152602081018790527f38f8a0c92f4c5b0b6877f878cb4c0c8d348a47b76d716c8e78f425043df9515b910160405180910390a15b600e546040516000916001600160a01b03169089908381818185875af1925050503d80600081146111f4576040519150601f19603f3d011682016040523d82523d6000602084013e6111f9565b606091505b5050809150508061121d576040516308981c1360e21b815260040160405180910390fd5b600d546040516001600160a01b03909116908a90600081818185875af1925050503d806000811461126a576040519150601f19603f3d011682016040523d82523d6000602084013e61126f565b606091505b50508091505080611293576040516308981c1360e21b815260040160405180910390fd5b604080518b8152602081018b9052908101899052606081018890527ffb4a5e7948adda6cd32ae844cf077ea8c7c22549a8eb0aabfc739fe2f57684479060800160405180910390a15050505050505050505050565b6001600160a01b03831661130e5760405162461bcd60e51b81526004016106e990611853565b6001600160a01b0382166113345760405162461bcd60e51b81526004016106e990611898565b6001600160a01b038316600090815260208190526040902054818110156113ac5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610bd7565b6040805160028082526060820183526000926020830190803683375050600654604080516315ab88c960e31b815290519394506001600160a01b039091169263ad5c4648925060048083019260209291908290030181865afa15801561147c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a091906118db565b816000815181106114b3576114b3611944565b60200260200101906001600160a01b031690816001600160a01b03168152505030816001815181106114e7576114e7611944565b6001600160a01b039283166020918202929092010152600654604051637ff36ab560e01b8152911690637ff36ab590849061152d9060009086903090429060040161195a565b6000604051808303818588803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b50505050505050565b60065461157b9030906001600160a01b031684610e85565b6006546001600160a01b031663f305d7198230856000806115a46005546001600160a01b031690565b60405160e088901b6001600160e01b03191681526001600160a01b03958616600482015260248101949094526044840192909252606483015290911660848201524260a482015260c40161152d565b600060208083528351808285015260005b8181101561162057858101830151858201604001528201611604565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b0381168114610c7e57600080fd5b6000806040838503121561166957600080fd5b823561167481611641565b946020939093013593505050565b60006020828403121561169457600080fd5b813561169f81611641565b9392505050565b6000806000606084860312156116bb57600080fd5b83356116c681611641565b925060208401356116d681611641565b929592945050506040919091013590565b600080600080608085870312156116fd57600080fd5b5050823594602084013594506040840135936060013592509050565b60006020828403121561172b57600080fd5b5035919050565b6000806040838503121561174557600080fd5b823561175081611641565b9150602083013561176081611641565b809150509250929050565b600181811c9082168061177f57607f821691505b60208210810361179f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602a908201527f4e65772061646472657373206973207468652073616d652061732063757272656040820152696e74206164647265737360b01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610689576106896117ef565b60006020828403121561182a57600080fd5b5051919050565b60006020828403121561184357600080fd5b8151801515811461169f57600080fd5b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6000602082840312156118ed57600080fd5b815161169f81611641565b8082028115828204841417610689576106896117ef565b60008261192c57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610689576106896117ef565b634e487b7160e01b600052603260045260246000fd5b600060808201868352602060808185015281875180845260a086019150828901935060005b818110156119a45784516001600160a01b03168352938301939183019160010161197f565b50506001600160a01b03969096166040850152505050606001529291505056fea2646970667358221220ea2c4ba8b848ec4168efea74d21b1b40f79ec4dcf1a488ddfc6663df27d9d98d64736f6c63430008140033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets up the AuctionToken contract with predefined fees and Uniswap router.",
        "params": {
          "_buybackFee": "Initial buyback fee.",
          "_lpFee": "Initial liquidity provider fee.",
          "_revShareFee": "Initial revenue share fee.",
          "_revShareWallet": "Address of the revenue sharing wallet.",
          "_teamFee": "Initial team fee.",
          "_teamWallet": "Address of the team wallet.",
          "_uniswapV2Router": "Address of the UniswapV2Router."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "executeDistribution()": {
        "details": "This function should be called to trigger the distribution mechanism manually.      It requires the caller to be the contract owner. It will call the internal function      `_executeDistribution` with the contract's current token balance."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setEthDistributionThreshold(uint256)": {
        "details": "Sets a new threshold for when ETH distribution should occur",
        "params": {
          "_newThreshold": "The new threshold in wei"
        }
      },
      "setFees(uint256,uint256,uint256,uint256)": {
        "details": "Updates fee percentages and recalculates the total fee",
        "params": {
          "_buybackFee": "The new buyback fee percentage",
          "_lpFee": "The new liquidity provider fee percentage",
          "_revShareFee": "The new revenue share fee percentage",
          "_teamFee": "The new team fee percentage"
        }
      },
      "setRevShareWallet(address)": {
        "details": "Sets a new revenue share wallet address",
        "params": {
          "_newRevShareWallet": "The new wallet address for revenue sharing"
        }
      },
      "setTeamWallet(address)": {
        "details": "Sets a new team wallet address",
        "params": {
          "_newTeamWallet": "The new wallet address for the team"
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawStuckEth(address)": {
        "details": "Allows the owner to withdraw ETH sent to the contract.",
        "params": {
          "toAddr": "Address to send the ETH to."
        }
      },
      "withdrawStuckToken(address,address)": {
        "details": "Allows the owner to withdraw any ERC20 token sent to the contract.",
        "params": {
          "_to": "Address to send the tokens to.",
          "_token": "Address of the token contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "executeDistribution()": {
        "notice": "Executes the distribution of contract's token balance for liquidity, revenue sharing, team, and buyback."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 128,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 134,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 136,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 138,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 140,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 7,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1304,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "uniswapV2Router",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IUniswapV2Router02Wrapper)1290"
      },
      {
        "astId": 1308,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "revShareFee",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1310,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "buybackFee",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1312,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "lpFee",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1314,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "teamFee",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1316,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "totalFee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1319,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "ethDistributionThreshold",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 1324,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "revShareWallet",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 1326,
        "contract": "contracts/token/AuctionToken.sol:AuctionToken",
        "label": "teamWallet",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IUniswapV2Router02Wrapper)1290": {
        "encoding": "inplace",
        "label": "contract IUniswapV2Router02Wrapper",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}