{
  "address": "0x32993C596D8F32d7a5fD710ed1DB396307C3ce83",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAuctionBot",
          "name": "_easyAuction",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenWrapper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "auctionId",
          "type": "uint256"
        },
        {
          "internalType": "uint96[]",
          "name": "_minBuyAmounts",
          "type": "uint96[]"
        },
        {
          "internalType": "bytes32[]",
          "name": "_prevSellOrders",
          "type": "bytes32[]"
        },
        {
          "internalType": "string",
          "name": "referralCode",
          "type": "string"
        }
      ],
      "name": "depositAndPlaceOrder",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "easyAuction",
      "outputs": [
        {
          "internalType": "contract IAuctionBot",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenWrapper",
      "outputs": [
        {
          "internalType": "contract IWETH",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xdb134ca805bdeecdb3bc44b9a99791ab48cc77a8c1d8cb477b12cf118761599a",
  "receipt": {
    "to": null,
    "from": "0x9D5a2ddBb543E62e026b182C8929d099781547c3",
    "contractAddress": "0x32993C596D8F32d7a5fD710ed1DB396307C3ce83",
    "transactionIndex": 1,
    "gasUsed": "507118",
    "logsBloom": "0x
    "blockHash": "0xc284b5785abba79db01d601ac1541043e43842d7e6b98f3681da5d8028fb9750",
    "transactionHash": "0xdb134ca805bdeecdb3bc44b9a99791ab48cc77a8c1d8cb477b12cf118761599a",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 54808603,
        "transactionHash": "0xdb134ca805bdeecdb3bc44b9a99791ab48cc77a8c1d8cb477b12cf118761599a",
        "address": "0xEe01c0CD76354C383B8c7B4e65EA88D00B06f36f",
        "topics": [
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
          "0x00000000000000000000000032993c596d8f32d7a5fd710ed1db396307c3ce83",
          "0x000000000000000000000000b792bf99843fbef42814c0c931fbba563b579dc5"
        ],
        "data": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "logIndex": 0,
        "blockHash": "0xc284b5785abba79db01d601ac1541043e43842d7e6b98f3681da5d8028fb9750"
      }
    ],
    "blockNumber": 54808603,
    "cumulativeGasUsed": "507118",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB792bf99843FBEf42814c0C931FbbA563B579DC5",
    "0xEe01c0CD76354C383B8c7B4e65EA88D00B06f36f"
  ],
  "numDeployments": 1,
  "solcInputHash": "d8c0caa2449d1cea817ba4d85d3fc074",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAuctionBot\",\"name\":\"_easyAuction\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenWrapper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint96[]\",\"name\":\"_minBuyAmounts\",\"type\":\"uint96[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_prevSellOrders\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"referralCode\",\"type\":\"string\"}],\"name\":\"depositAndPlaceOrder\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"easyAuction\",\"outputs\":[{\"internalType\":\"contract IAuctionBot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenWrapper\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/wrappers/DepositAndPlaceOrder.sol\":\"DepositAndPlaceOrder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/interfaces/IAuctionBot.sol\":{\"content\":\"pragma solidity ^0.8.2;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IAuctionBot {\\n    //E1 - no longer in order placement phase\\n    //E2 - no longer in order placement and cancelation phase\\n    //E3 - Auction not in solution submission phase\\n    //E4 - Auction not yet finished\\n    //E5 - ReferralRewardManager cannot be zero address\\n    //E6 - Fee is not allowed to be set higher than 2%\\n    //E7 - Strategy is currently disabled\\n    //E8 - referral fee cannot exceed 10%\\n    //E9 - cannot auction zero tokens\\n    //E10 - tokens cannot be auctioned for free\\n    //E11 - minimumBiddingAmountPerOrder is not allowed to be zero\\n    //E12 - time periods are not configured correctly\\n    //E13 - auction end date must be in the future\\n    //E14 - Only owner can create auctions with no strategy\\n    //E15 - _minBuyAmounts must be greater than 0\\n    //E16 - limit price not better than mimimal offer\\n    //E17 - order too small\\n    //E18 - referral code not registered\\n    //E19 - referral code owner cannot be submitter\\n    //E20 - reached end of order list\\n    //E21 - too many orders summed up\\n    //E22 - Only the user can cancel his orders\\n    //E23 - only allowed to claim for same user\\n    //E24 - order is no longer claimable\\n    //E25 - User already registered\\n    //E26 - Bidding token not registered\\n\\n    //structs\\n    struct IClaimedFromOrder {\\n        uint256 auctionId;\\n        uint64 userId;\\n        uint96 buyAmount;\\n        uint96 sellAmount;\\n        string referralCode;\\n        uint256 referralFee;\\n        uint256 auctioningTokenAmount;\\n        uint256 biddingTokenAmount;\\n    }\\n    struct InitParams {\\n        IERC20 _auctioningToken;\\n        IERC20 _biddingToken;\\n        uint256 _orderCancellationEndDate;\\n        uint256 _auctionEndDate;\\n        uint96 _auctionedSellAmount;\\n        uint96 _minBuyAmount;\\n        uint256 _minimumBiddingAmountPerOrder;\\n        uint256 _minFundingThreshold;\\n        uint256 _referralFeeNumerator;\\n        uint256 _strategyId;\\n        bytes32[] _strategyInitParams;\\n    }\\n    struct AuctionData {\\n        IERC20 auctioningToken;\\n        IERC20 biddingToken;\\n        uint256 orderCancellationEndDate;\\n        uint256 auctionEndDate;\\n        bytes32 initialAuctionOrder;\\n        uint256 minimumBiddingAmountPerOrder;\\n        uint256 interimSumBidAmount;\\n        bytes32 interimOrder;\\n        bytes32 clearingPriceOrder;\\n        uint96 volumeClearingPriceOrder;\\n        bool minFundingThresholdNotReached;\\n        uint256 minFundingThreshold;\\n    }\\n\\n    //events\\n    event NewSellOrder(\\n        uint256 indexed auctionId,\\n        uint64 indexed userId,\\n        uint96 buyAmount,\\n        uint96 sellAmount,\\n        string referralCode\\n    );\\n    event CancellationSellOrder(\\n        uint256 indexed auctionId,\\n        uint64 indexed userId,\\n        uint96 buyAmount,\\n        uint96 sellAmount\\n    );\\n    event ClaimedFromOrder(IClaimedFromOrder params);\\n    event NewUser(uint64 indexed userId, address indexed userAddress);\\n    event NewAuction(\\n        uint256 indexed auctionId,\\n        IERC20 indexed _auctioningToken,\\n        IERC20 indexed _biddingToken,\\n        uint256 orderCancellationEndDate,\\n        uint256 auctionEndDate,\\n        uint64 userId,\\n        uint96 _auctionedSellAmount,\\n        uint96 _minBuyAmount,\\n        uint256 minimumBiddingAmountPerOrder,\\n        uint256 minFundingThreshold\\n    );\\n    event AuctionCleared(\\n        uint256 indexed auctionId,\\n        uint64 indexed userId,\\n        uint96 buyAmount,\\n        uint96 sellAmount,\\n        uint96 soldAuctioningTokens,\\n        uint96 soldBiddingTokens\\n    );\\n    event UserRegistration(address indexed user, uint64 userId);\\n    event Distribution(uint256 indexed auctionId, uint256 amount);\\n\\n    //functions\\n    function placeSellOrdersOnBehalf(\\n        uint256 auctionId,\\n        uint96[] calldata _minBuyAmounts,\\n        uint96[] calldata _sellAmounts,\\n        bytes32[] calldata _prevSellOrders,\\n        address orderSubmitter,\\n        string calldata referralCode\\n    ) external returns (uint64 userId, uint256 sumOfSellAmounts);\\n}\\n\",\"keccak256\":\"0x0035840b3b03621928ade4b998d3345e873bc26d227c8f5526e423a83f5230d8\"},\"contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x505481410bb45395126e41ca57dfac0058957c38f090781099a3eae5c1f3a8dd\"},\"contracts/wrappers/DepositAndPlaceOrder.sol\":{\"content\":\"pragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IAuctionBot.sol\\\";\\nimport \\\"../interfaces/IWETH.sol\\\";\\n\\ncontract DepositAndPlaceOrder {\\n    IAuctionBot public immutable easyAuction;\\n    IWETH public immutable nativeTokenWrapper;\\n\\n    constructor(IAuctionBot _easyAuction, address _nativeTokenWrapper) {\\n        nativeTokenWrapper = IWETH(_nativeTokenWrapper);\\n        easyAuction = _easyAuction;\\n        IERC20(_nativeTokenWrapper).approve(\\n            address(_easyAuction),\\n            type(uint256).max\\n        );\\n    }\\n\\n    function depositAndPlaceOrder(\\n        uint256 auctionId,\\n        uint96[] calldata _minBuyAmounts,\\n        bytes32[] calldata _prevSellOrders,\\n        string calldata referralCode\\n    ) external payable returns (uint64) {\\n        uint96[] memory sellAmounts = new uint96[](1);\\n        require(msg.value < 2 ** 96, \\\"too much value sent\\\");\\n\\n        nativeTokenWrapper.deposit{value: msg.value}();\\n\\n        sellAmounts[0] = uint96(msg.value);\\n        (uint64 userId, uint256 sumOfSellAmounts) = easyAuction\\n            .placeSellOrdersOnBehalf(\\n                auctionId,\\n                _minBuyAmounts,\\n                sellAmounts,\\n                _prevSellOrders,\\n                msg.sender,\\n                referralCode\\n            );\\n\\n        if (msg.value > sumOfSellAmounts) {\\n            uint256 remainingBalance = msg.value - sumOfSellAmounts;\\n            // wrap the remaining balance\\n            nativeTokenWrapper.withdraw(remainingBalance);\\n            // transfer the remaining balance to the user\\n            // slither-disable-next-line arbitrary-send-eth\\n            (bool success, ) = msg.sender.call{value: remainingBalance}(\\\"\\\");\\n            require(success, \\\"DepositAndPlaceOrder: transfer failed\\\");\\n        }\\n\\n        return userId;\\n    }\\n\\n    receive() external payable {\\n        // only from nativeTokenWrapper\\n        require(\\n            msg.sender == address(nativeTokenWrapper),\\n            \\\"DepositAndPlaceOrder: only nativeTokenWrapper\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x31a14fb99be37578d0d1316b23d8dfedcff77d96c0a6e3cb9ffaedfbc2ba73cd\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161091838038061091883398101604081905261002f916100d0565b6001600160a01b0381811660a0819052908316608081905260405163095ea7b360e01b81526004810191909152600019602482015263095ea7b3906044016020604051808303816000875af115801561008c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b0919061010a565b505050610133565b6001600160a01b03811681146100cd57600080fd5b50565b600080604083850312156100e357600080fd5b82516100ee816100b8565b60208401519092506100ff816100b8565b809150509250929050565b60006020828403121561011c57600080fd5b8151801515811461012c57600080fd5b9392505050565b60805160a0516107a561017360003960008181604801528181610166015281816101f8015261037001526000818161011a01526102a301526107a56000f3fe6080604052600436106100385760003560e01c80632ae6d3ea146100d7578063537a338114610108578063f9ea29cb1461015457600080fd5b366100d257336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100d05760405162461bcd60e51b815260206004820152602d60248201527f4465706f736974416e64506c6163654f726465723a206f6e6c79206e6174697660448201526c32aa37b5b2b72bb930b83832b960991b60648201526084015b60405180910390fd5b005b600080fd5b6100ea6100e53660046104d7565b610188565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011457600080fd5b5061013c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ff565b34801561016057600080fd5b5061013c7f000000000000000000000000000000000000000000000000000000000000000081565b60408051600180825281830190925260009182919060208083019080368337019050509050600160601b34106101f65760405162461bcd60e51b81526020600482015260136024820152721d1bdbc81b5d58da081d985b1d59481cd95b9d606a1b60448201526064016100c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561025157600080fd5b505af1158015610265573d6000803e3d6000fd5b5050505050348160008151811061027e5761027e6105a8565b60200260200101906001600160601b031690816001600160601b0316815250506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ba8fe75f8c8c8c878d8d338e8e6040518a63ffffffff1660e01b81526004016102fd9998979695949392919061065d565b60408051808303816000875af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f919061070d565b915091508034111561047d5760006103578234610748565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156103bc57600080fd5b505af11580156103d0573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d8060008114610416576040519150601f19603f3d011682016040523d82523d6000602084013e61041b565b606091505b505090508061047a5760405162461bcd60e51b815260206004820152602560248201527f4465706f736974416e64506c6163654f726465723a207472616e736665722066604482015264185a5b195960da1b60648201526084016100c7565b50505b509998505050505050505050565b60008083601f84011261049d57600080fd5b50813567ffffffffffffffff8111156104b557600080fd5b6020830191508360208260051b85010111156104d057600080fd5b9250929050565b60008060008060008060006080888a0312156104f257600080fd5b87359650602088013567ffffffffffffffff8082111561051157600080fd5b61051d8b838c0161048b565b909850965060408a013591508082111561053657600080fd5b6105428b838c0161048b565b909650945060608a013591508082111561055b57600080fd5b818a0191508a601f83011261056f57600080fd5b81358181111561057e57600080fd5b8b602082850101111561059057600080fd5b60208301945080935050505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156105f75781516001600160601b0316875295820195908201906001016105d2565b509495945050505050565b81835260006001600160fb1b0383111561061b57600080fd5b8260051b80836020870137939093016020019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208083018290529082018990526000908a9060e0840183805b8d8110156106ae5784356001600160601b03811680821461069b578384fd5b845250938301939183019160010161067c565b505084810360408601526106c2818c6105be565b9250505082810360608401526106d981888a610602565b6001600160a01b0387166080850152905082810360a08401526106fd818587610634565b9c9b505050505050505050505050565b6000806040838503121561072057600080fd5b825167ffffffffffffffff8116811461073857600080fd5b6020939093015192949293505050565b8181038181111561076957634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122081a2331f9ce2371433f2a7cf7d7a58ae2ebfcb6dafbb7a2d85cba44aa311284264736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80632ae6d3ea146100d7578063537a338114610108578063f9ea29cb1461015457600080fd5b366100d257336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100d05760405162461bcd60e51b815260206004820152602d60248201527f4465706f736974416e64506c6163654f726465723a206f6e6c79206e6174697660448201526c32aa37b5b2b72bb930b83832b960991b60648201526084015b60405180910390fd5b005b600080fd5b6100ea6100e53660046104d7565b610188565b60405167ffffffffffffffff90911681526020015b60405180910390f35b34801561011457600080fd5b5061013c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ff565b34801561016057600080fd5b5061013c7f000000000000000000000000000000000000000000000000000000000000000081565b60408051600180825281830190925260009182919060208083019080368337019050509050600160601b34106101f65760405162461bcd60e51b81526020600482015260136024820152721d1bdbc81b5d58da081d985b1d59481cd95b9d606a1b60448201526064016100c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561025157600080fd5b505af1158015610265573d6000803e3d6000fd5b5050505050348160008151811061027e5761027e6105a8565b60200260200101906001600160601b031690816001600160601b0316815250506000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ba8fe75f8c8c8c878d8d338e8e6040518a63ffffffff1660e01b81526004016102fd9998979695949392919061065d565b60408051808303816000875af115801561031b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033f919061070d565b915091508034111561047d5760006103578234610748565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156103bc57600080fd5b505af11580156103d0573d6000803e3d6000fd5b50506040516000925033915083908381818185875af1925050503d8060008114610416576040519150601f19603f3d011682016040523d82523d6000602084013e61041b565b606091505b505090508061047a5760405162461bcd60e51b815260206004820152602560248201527f4465706f736974416e64506c6163654f726465723a207472616e736665722066604482015264185a5b195960da1b60648201526084016100c7565b50505b509998505050505050505050565b60008083601f84011261049d57600080fd5b50813567ffffffffffffffff8111156104b557600080fd5b6020830191508360208260051b85010111156104d057600080fd5b9250929050565b60008060008060008060006080888a0312156104f257600080fd5b87359650602088013567ffffffffffffffff8082111561051157600080fd5b61051d8b838c0161048b565b909850965060408a013591508082111561053657600080fd5b6105428b838c0161048b565b909650945060608a013591508082111561055b57600080fd5b818a0191508a601f83011261056f57600080fd5b81358181111561057e57600080fd5b8b602082850101111561059057600080fd5b60208301945080935050505092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b838110156105f75781516001600160601b0316875295820195908201906001016105d2565b509495945050505050565b81835260006001600160fb1b0383111561061b57600080fd5b8260051b80836020870137939093016020019392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208083018290529082018990526000908a9060e0840183805b8d8110156106ae5784356001600160601b03811680821461069b578384fd5b845250938301939183019160010161067c565b505084810360408601526106c2818c6105be565b9250505082810360608401526106d981888a610602565b6001600160a01b0387166080850152905082810360a08401526106fd818587610634565b9c9b505050505050505050505050565b6000806040838503121561072057600080fd5b825167ffffffffffffffff8116811461073857600080fd5b6020939093015192949293505050565b8181038181111561076957634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122081a2331f9ce2371433f2a7cf7d7a58ae2ebfcb6dafbb7a2d85cba44aa311284264736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}