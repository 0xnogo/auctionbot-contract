{
  "address": "0xD7CEba9905c9311E701Dd2Dc212469D24c09576d",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20Deployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialAmount",
          "type": "uint256"
        }
      ],
      "name": "deployERC20",
      "outputs": [
        {
          "internalType": "address",
          "name": "newERC20",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x907c6ba21f82bbc047aa08841724f5a46d523a9d72d90a90cbfcfe8d0150a724",
  "receipt": {
    "to": null,
    "from": "0x9D5a2ddBb543E62e026b182C8929d099781547c3",
    "contractAddress": "0xD7CEba9905c9311E701Dd2Dc212469D24c09576d",
    "transactionIndex": 1,
    "gasUsed": "969011",
    "logsBloom": "0x
    "blockHash": "0x9d84593038ae940251f5312ef232c1a5068fee87f88463fb49d0b13212cc1677",
    "transactionHash": "0x907c6ba21f82bbc047aa08841724f5a46d523a9d72d90a90cbfcfe8d0150a724",
    "logs": [],
    "blockNumber": 54808613,
    "cumulativeGasUsed": "969011",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d8c0caa2449d1cea817ba4d85d3fc074",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20Deployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialAmount\",\"type\":\"uint256\"}],\"name\":\"deployERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"newERC20\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployERC20(string,string,uint256)\":{\"details\":\"Deploy a new ERC20 token with the specified name, symbol, decimals, and initial amount.\",\"params\":{\"initialAmount\":\"Initial supply of the token. Will be minted to the caller.\",\"name\":\"Name of the ERC20 token.\",\"symbol\":\"Symbol of the ERC20 token.\"},\"returns\":{\"newERC20\":\"Address of the newly deployed ERC20 token.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Factory.sol\":\"ERC20Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address from, address to, uint256 amount) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\\n}\\n\",\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\\n */\\nabstract contract ERC20Capped is ERC20 {\\n    uint256 private immutable _cap;\\n\\n    /**\\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\\n     * set once during construction.\\n     */\\n    constructor(uint256 cap_) {\\n        require(cap_ > 0, \\\"ERC20Capped: cap is 0\\\");\\n        _cap = cap_;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view virtual returns (uint256) {\\n        return _cap;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_mint}.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual override {\\n        require(ERC20.totalSupply() + amount <= cap(), \\\"ERC20Capped: cap exceeded\\\");\\n        super._mint(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ERC20Factory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\\\";\\n\\ncontract ERC20Factory {\\n    // Event to log the address of the deployed ERC20 contract.\\n    event ERC20Deployed(\\n        address indexed deployer,\\n        address indexed erc20Address,\\n        string name,\\n        string symbol,\\n        uint256 initialAmount\\n    );\\n\\n    /**\\n     * @dev Deploy a new ERC20 token with the specified name, symbol, decimals, and initial amount.\\n     * @param name Name of the ERC20 token.\\n     * @param symbol Symbol of the ERC20 token.\\n     * @param initialAmount Initial supply of the token. Will be minted to the caller.\\n     * @return newERC20 Address of the newly deployed ERC20 token.\\n     */\\n    function deployERC20(\\n        string memory name,\\n        string memory symbol,\\n        uint256 initialAmount\\n    ) external returns (address newERC20) {\\n        CustomERC20 token = new CustomERC20(\\n            name,\\n            symbol,\\n            initialAmount,\\n            msg.sender\\n        );\\n        emit ERC20Deployed(\\n            msg.sender,\\n            address(token),\\n            name,\\n            symbol,\\n            initialAmount\\n        );\\n        return address(token);\\n    }\\n}\\n\\ncontract CustomERC20 is ERC20Capped {\\n    constructor(\\n        string memory name,\\n        string memory symbol,\\n        uint256 cap,\\n        address initialHolder\\n    ) ERC20(name, symbol) ERC20Capped(cap) {\\n        _mint(initialHolder, cap);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal override {\\n        super._mint(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xbb4e72417738409c4831700a814187ec296e7d3626c6ee4b4b8eaa2eeeacc815\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611099806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636f43b40214610030575b600080fd5b61004361003e3660046101a5565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008084848433604051610072906100f5565b61007f9493929190610258565b604051809103906000f08015801561009b573d6000803e3d6000fd5b509050806001600160a01b0316336001600160a01b03167f85e3b1e6a4b30ddbcf50fea3224d7f7c8f36d89d9c73ec087877d446da3fa1268787876040516100e59392919061029f565b60405180910390a3949350505050565b610d8e806102d683390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261012957600080fd5b813567ffffffffffffffff8082111561014457610144610102565b604051601f8301601f19908116603f0116810190828211818310171561016c5761016c610102565b8160405283815286602085880101111561018557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156101ba57600080fd5b833567ffffffffffffffff808211156101d257600080fd5b6101de87838801610118565b945060208601359150808211156101f457600080fd5b5061020186828701610118565b925050604084013590509250925092565b6000815180845260005b818110156102385760208185018101518683018201520161021c565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061026b6080830187610212565b828103602084015261027d8187610212565b604084019590955250506001600160a01b039190911660609091015292915050565b6060815260006102b26060830186610212565b82810360208401526102c48186610212565b91505082604083015294935050505056fe60a06040523480156200001157600080fd5b5060405162000d8e38038062000d8e8339810160408190526200003491620002d8565b8184846003620000458382620003fb565b506004620000548282620003fb565b50505060008111620000ad5760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b608052620000bc8183620000c6565b50505050620004ef565b620000d28282620000d6565b5050565b60805181620000e460025490565b620000f09190620004c7565b1115620001405760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000a4565b620000d282826001600160a01b0382166200019e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000a4565b8060026000828254620001b29190620004c7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620000d2600083835b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023b57600080fd5b81516001600160401b038082111562000258576200025862000213565b604051601f8301601f19908116603f0116810190828211818310171562000283576200028362000213565b81604052838152602092508683858801011115620002a057600080fd5b600091505b83821015620002c45785820183015181830184015290820190620002a5565b600093810190920192909252949350505050565b60008060008060808587031215620002ef57600080fd5b84516001600160401b03808211156200030757600080fd5b620003158883890162000229565b955060208701519150808211156200032c57600080fd5b506200033b8782880162000229565b60408701516060880151919550935090506001600160a01b03811681146200036257600080fd5b939692955090935050565b600181811c908216806200038257607f821691505b602082108103620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020e57600081815260208120601f850160051c81016020861015620003d25750805b601f850160051c820191505b81811015620003f357828155600101620003de565b505050505050565b81516001600160401b0381111562000417576200041762000213565b6200042f816200042884546200036d565b84620003a9565b602080601f8311600181146200046757600084156200044e5750858301515b600019600386901b1c1916600185901b178555620003f3565b600085815260208120601f198616915b82811015620004985788860151825594840194600190910190840162000477565b5085821015620004b75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004e957634e487b7160e01b600052601160045260246000fd5b92915050565b6080516108836200050b600039600061013001526108836000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461015457806370a082311461016757806395d89b4114610190578063a457c2d714610198578063a9059cbb146101ab578063dd62ed3e146101be57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063355274ea1461012e575b600080fd5b6100c16101d1565b6040516100ce91906106cd565b60405180910390f35b6100ea6100e5366004610737565b610263565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610761565b61027d565b604051601281526020016100ce565b7f00000000000000000000000000000000000000000000000000000000000000006100fe565b6100ea610162366004610737565b6102a1565b6100fe61017536600461079d565b6001600160a01b031660009081526020819052604090205490565b6100c16102c3565b6100ea6101a6366004610737565b6102d2565b6100ea6101b9366004610737565b610352565b6100fe6101cc3660046107bf565b610360565b6060600380546101e0906107f2565b80601f016020809104026020016040519081016040528092919081815260200182805461020c906107f2565b80156102595780601f1061022e57610100808354040283529160200191610259565b820191906000526020600020905b81548152906001019060200180831161023c57829003601f168201915b5050505050905090565b60003361027181858561038b565b60019150505b92915050565b60003361028b8582856104af565b610296858585610529565b506001949350505050565b6000336102718185856102b48383610360565b6102be919061082c565b61038b565b6060600480546101e0906107f2565b600033816102e08286610360565b9050838110156103455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610296828686840361038b565b600033610271818585610529565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161033c565b6001600160a01b03821661044e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161033c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104bb8484610360565b9050600019811461052357818110156105165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161033c565b610523848484840361038b565b50505050565b6001600160a01b03831661058d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161033c565b6001600160a01b0382166105ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161033c565b6001600160a01b038316600090815260208190526040902054818110156106675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161033c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610523565b600060208083528351808285015260005b818110156106fa578581018301518582016040015282016106de565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073257600080fd5b919050565b6000806040838503121561074a57600080fd5b6107538361071b565b946020939093013593505050565b60008060006060848603121561077657600080fd5b61077f8461071b565b925061078d6020850161071b565b9150604084013590509250925092565b6000602082840312156107af57600080fd5b6107b88261071b565b9392505050565b600080604083850312156107d257600080fd5b6107db8361071b565b91506107e96020840161071b565b90509250929050565b600181811c9082168061080657607f821691505b60208210810361082657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027757634e487b7160e01b600052601160045260246000fdfea2646970667358221220ccbb2193bc78a484b824d7af79c4885e7f53a5e758326b241b4463678319851264736f6c63430008140033a26469706673582212206c3db29b30318786327c501760bafb40fca4a53d8a3f1916076561d9bfcce51464736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80636f43b40214610030575b600080fd5b61004361003e3660046101a5565b61005f565b6040516001600160a01b03909116815260200160405180910390f35b60008084848433604051610072906100f5565b61007f9493929190610258565b604051809103906000f08015801561009b573d6000803e3d6000fd5b509050806001600160a01b0316336001600160a01b03167f85e3b1e6a4b30ddbcf50fea3224d7f7c8f36d89d9c73ec087877d446da3fa1268787876040516100e59392919061029f565b60405180910390a3949350505050565b610d8e806102d683390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261012957600080fd5b813567ffffffffffffffff8082111561014457610144610102565b604051601f8301601f19908116603f0116810190828211818310171561016c5761016c610102565b8160405283815286602085880101111561018557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156101ba57600080fd5b833567ffffffffffffffff808211156101d257600080fd5b6101de87838801610118565b945060208601359150808211156101f457600080fd5b5061020186828701610118565b925050604084013590509250925092565b6000815180845260005b818110156102385760208185018101518683018201520161021c565b506000602082860101526020601f19601f83011685010191505092915050565b60808152600061026b6080830187610212565b828103602084015261027d8187610212565b604084019590955250506001600160a01b039190911660609091015292915050565b6060815260006102b26060830186610212565b82810360208401526102c48186610212565b91505082604083015294935050505056fe60a06040523480156200001157600080fd5b5060405162000d8e38038062000d8e8339810160408190526200003491620002d8565b8184846003620000458382620003fb565b506004620000548282620003fb565b50505060008111620000ad5760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b608052620000bc8183620000c6565b50505050620004ef565b620000d28282620000d6565b5050565b60805181620000e460025490565b620000f09190620004c7565b1115620001405760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401620000a4565b620000d282826001600160a01b0382166200019e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620000a4565b8060026000828254620001b29190620004c7565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3620000d2600083835b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023b57600080fd5b81516001600160401b038082111562000258576200025862000213565b604051601f8301601f19908116603f0116810190828211818310171562000283576200028362000213565b81604052838152602092508683858801011115620002a057600080fd5b600091505b83821015620002c45785820183015181830184015290820190620002a5565b600093810190920192909252949350505050565b60008060008060808587031215620002ef57600080fd5b84516001600160401b03808211156200030757600080fd5b620003158883890162000229565b955060208701519150808211156200032c57600080fd5b506200033b8782880162000229565b60408701516060880151919550935090506001600160a01b03811681146200036257600080fd5b939692955090935050565b600181811c908216806200038257607f821691505b602082108103620003a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020e57600081815260208120601f850160051c81016020861015620003d25750805b601f850160051c820191505b81811015620003f357828155600101620003de565b505050505050565b81516001600160401b0381111562000417576200041762000213565b6200042f816200042884546200036d565b84620003a9565b602080601f8311600181146200046757600084156200044e5750858301515b600019600386901b1c1916600185901b178555620003f3565b600085815260208120601f198616915b82811015620004985788860151825594840194600190910190840162000477565b5085821015620004b75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004e957634e487b7160e01b600052601160045260246000fd5b92915050565b6080516108836200050b600039600061013001526108836000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633950935111610071578063395093511461015457806370a082311461016757806395d89b4114610190578063a457c2d714610198578063a9059cbb146101ab578063dd62ed3e146101be57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063355274ea1461012e575b600080fd5b6100c16101d1565b6040516100ce91906106cd565b60405180910390f35b6100ea6100e5366004610737565b610263565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610761565b61027d565b604051601281526020016100ce565b7f00000000000000000000000000000000000000000000000000000000000000006100fe565b6100ea610162366004610737565b6102a1565b6100fe61017536600461079d565b6001600160a01b031660009081526020819052604090205490565b6100c16102c3565b6100ea6101a6366004610737565b6102d2565b6100ea6101b9366004610737565b610352565b6100fe6101cc3660046107bf565b610360565b6060600380546101e0906107f2565b80601f016020809104026020016040519081016040528092919081815260200182805461020c906107f2565b80156102595780601f1061022e57610100808354040283529160200191610259565b820191906000526020600020905b81548152906001019060200180831161023c57829003601f168201915b5050505050905090565b60003361027181858561038b565b60019150505b92915050565b60003361028b8582856104af565b610296858585610529565b506001949350505050565b6000336102718185856102b48383610360565b6102be919061082c565b61038b565b6060600480546101e0906107f2565b600033816102e08286610360565b9050838110156103455760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610296828686840361038b565b600033610271818585610529565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ed5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161033c565b6001600160a01b03821661044e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161033c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104bb8484610360565b9050600019811461052357818110156105165760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161033c565b610523848484840361038b565b50505050565b6001600160a01b03831661058d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161033c565b6001600160a01b0382166105ef5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161033c565b6001600160a01b038316600090815260208190526040902054818110156106675760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161033c565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610523565b600060208083528351808285015260005b818110156106fa578581018301518582016040015282016106de565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461073257600080fd5b919050565b6000806040838503121561074a57600080fd5b6107538361071b565b946020939093013593505050565b60008060006060848603121561077657600080fd5b61077f8461071b565b925061078d6020850161071b565b9150604084013590509250925092565b6000602082840312156107af57600080fd5b6107b88261071b565b9392505050565b600080604083850312156107d257600080fd5b6107db8361071b565b91506107e96020840161071b565b90509250929050565b600181811c9082168061080657607f821691505b60208210810361082657634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027757634e487b7160e01b600052601160045260246000fdfea2646970667358221220ccbb2193bc78a484b824d7af79c4885e7f53a5e758326b241b4463678319851264736f6c63430008140033a26469706673582212206c3db29b30318786327c501760bafb40fca4a53d8a3f1916076561d9bfcce51464736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deployERC20(string,string,uint256)": {
        "details": "Deploy a new ERC20 token with the specified name, symbol, decimals, and initial amount.",
        "params": {
          "initialAmount": "Initial supply of the token. Will be minted to the caller.",
          "name": "Name of the ERC20 token.",
          "symbol": "Symbol of the ERC20 token."
        },
        "returns": {
          "newERC20": "Address of the newly deployed ERC20 token."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}